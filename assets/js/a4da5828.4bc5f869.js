"use strict";(self.webpackChunkcluster_docs=self.webpackChunkcluster_docs||[]).push([[906],{3905:(e,t,r)=>{r.d(t,{Zo:()=>i,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),o=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},i=function(e){var t=o(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,i=u(e,["components","mdxType","originalType","parentName"]),d=o(r),m=a,g=d["".concat(c,".").concat(m)]||d[m]||p[m]||s;return r?n.createElement(g,l(l({ref:t},i),{},{components:r})):n.createElement(g,l({ref:t},i))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,l=new Array(s);l[0]=d;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:a,l[1]=u;for(var o=2;o<s;o++)l[o]=r[o];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6232:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>u,toc:()=>o});var n=r(7462),a=(r(7294),r(3905));const s={id:"unmanaged-cluster-setup",title:"Unmanaged cluster setup",sidebar_label:"Unmanaged cluster setup",sidebar_position:2,tags:["Unmanaged","Initial setup","setup"]},l="Unmanaged Cluster setup",u={unversionedId:"managed-cluster/unmanaged-cluster-setup",id:"managed-cluster/unmanaged-cluster-setup",title:"Unmanaged cluster setup",description:"Deploy the basic cluster setup with a single shell script.",source:"@site/docs/managed-cluster/unmanaged-setup.md",sourceDirName:"managed-cluster",slug:"/managed-cluster/unmanaged-cluster-setup",permalink:"/cluster-docs/docs/managed-cluster/unmanaged-cluster-setup",draft:!1,editUrl:"https://github.com/nimbit-software/cluster-docs/blob/master/docs/managed-cluster/unmanaged-setup.md",tags:[{label:"Unmanaged",permalink:"/cluster-docs/docs/tags/unmanaged"},{label:"Initial setup",permalink:"/cluster-docs/docs/tags/initial-setup"},{label:"setup",permalink:"/cluster-docs/docs/tags/setup"}],version:"current",sidebarPosition:2,frontMatter:{id:"unmanaged-cluster-setup",title:"Unmanaged cluster setup",sidebar_label:"Unmanaged cluster setup",sidebar_position:2,tags:["Unmanaged","Initial setup","setup"]},sidebar:"clusterDocs",previous:{title:"Managed cluster setup",permalink:"/cluster-docs/docs/managed-cluster/managed-cluster-setup"},next:{title:"Operators",permalink:"/cluster-docs/docs/managed-cluster/operators"}},c={},o=[],i={toc:o};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"unmanaged-cluster-setup"},"Unmanaged Cluster setup"),(0,a.kt)("p",null,"Deploy the basic cluster setup with a single shell script. "),(0,a.kt)("p",null,"In order to deploy the cluster via this script ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/tools/"},"Kubeclt")," and ",(0,a.kt)("a",{parentName:"p",href:"https://helm.sh/docs/intro/install/"},"Helm")," must be installed"),(0,a.kt)("p",null,"This script will deploy the following "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Nginx load reverse proxy"),(0,a.kt)("li",{parentName:"ul"},"Load Balancer for the cluster"),(0,a.kt)("li",{parentName:"ul"},"Cert-Manager"),(0,a.kt)("li",{parentName:"ul"},"Cluster issuer "),(0,a.kt)("li",{parentName:"ul"},"Config maps (empty) for udp and tcp services")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl -sL https://raw.githubusercontent.com/nimbit-software/cluster-docs/master/static/bash/unmanaged.sh | bash        \n")))}p.isMDXComponent=!0}}]);