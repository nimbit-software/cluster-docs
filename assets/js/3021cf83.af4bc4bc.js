"use strict";(self.webpackChunkcluster_docs=self.webpackChunkcluster_docs||[]).push([[2538],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(r),g=a,m=p["".concat(i,".").concat(g)]||p[g]||d[g]||o;return r?n.createElement(m,s(s({ref:t},u),{},{components:r})):n.createElement(m,s({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=p;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},7800:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const o=r.p+"assets/images/argocd-mang-58a6ca8e9291b00473d7efb0c9fc8a0c.webp",s={id:"getting-started",title:"Getting started",sidebar_label:"Getting Started",sidebar_position:1,tags:["Getting started"]},l="Cluster docs",i={unversionedId:"getting-started",id:"getting-started",title:"Getting started",description:"Welcome to the cluster docs.",source:"@site/docs/getting-started.mdx",sourceDirName:".",slug:"/getting-started",permalink:"/cluster-docs/docs/getting-started",draft:!1,editUrl:"https://github.com/nimbit-software/cluster-docs/blob/master/docs/getting-started.mdx",tags:[{label:"Getting started",permalink:"/cluster-docs/docs/tags/getting-started"}],version:"current",sidebarPosition:1,frontMatter:{id:"getting-started",title:"Getting started",sidebar_label:"Getting Started",sidebar_position:1,tags:["Getting started"]},sidebar:"clusterDocs",next:{title:"Setup",permalink:"/cluster-docs/docs/category/setup"}},c={},u=[{value:"Cluster architecture",id:"cluster-architecture",level:2},{value:"Overview",id:"overview",level:3}],d={toc:u};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cluster-docs"},"Cluster docs"),(0,a.kt)("p",null,"Welcome to the cluster docs.\nThe goal here is to provide a set by set guide for setting up an managing a nimbit Kubernetes cluster along with documenting all steps needed to get you up and running. "),(0,a.kt)("p",null,"This is a living documentation and will be updated step by step as new apps and features are added to the cluster."),(0,a.kt)("h2",{id:"cluster-architecture"},"Cluster architecture"),(0,a.kt)("p",null,"Our goal is to use argocd to manage all apps deployed on our clusters. "),(0,a.kt)("p",null,"In order to separate concerns we will create a management cluster where we will install some management and monitoring apps. From there we will create, deploy, monitor and manage further clusters."),(0,a.kt)("p",null,"Some of the components that should be installed on the Management cluster include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Argocd"),(0,a.kt)("li",{parentName:"ul"},"Rancher")),(0,a.kt)("h3",{id:"overview"},"Overview"),(0,a.kt)("img",{src:o}),(0,a.kt)("p",null,"After the management cluster has been set up every subsequent cluster should be setup with Rancher where possible. "),(0,a.kt)("p",null,"If it is not possible then the cluster should be imported by rancher after creation. "),(0,a.kt)("p",null,"After that all clusters should be added to argocd for git based deployments. "),(0,a.kt)("p",null,"For further information see ",(0,a.kt)("a",{parentName:"p",href:"/docs/management-cluster/mc-overview"},"Management Cluster")))}p.isMDXComponent=!0}}]);