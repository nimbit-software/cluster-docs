"use strict";(self.webpackChunkcluster_docs=self.webpackChunkcluster_docs||[]).push([[403],{3905:(e,t,r)=>{r.d(t,{Zo:()=>i,kt:()=>k});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=a.createContext({}),c=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},i=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,p=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),d=c(r),k=o,m=d["".concat(p,".").concat(k)]||d[k]||u[k]||n;return r?a.createElement(m,s(s({ref:t},i),{},{components:r})):a.createElement(m,s({ref:t},i))}));function k(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,s=new Array(n);s[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var c=2;c<n;c++)s[c]=r[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2897:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>n,metadata:()=>l,toc:()=>c});var a=r(7462),o=(r(7294),r(3905));const n={id:"operators",title:"Operators",sidebar_label:"Operators",sidebar_position:3,tags:["Operators","Kubernetes Operators","Redis","Postgres","Redis","Keycloak"]},s="Operators",l={unversionedId:"managed-cluster/operators",id:"managed-cluster/operators",title:"Operators",description:"For organizational purposes we want to have our operators running in a single namespace and managing apps in other namespaces.",source:"@site/docs/managed-cluster/operators.md",sourceDirName:"managed-cluster",slug:"/managed-cluster/operators",permalink:"/cluster-docs/docs/managed-cluster/operators",draft:!1,editUrl:"https://github.com/nimbit-software/cluster-docs/blob/master/docs/managed-cluster/operators.md",tags:[{label:"Operators",permalink:"/cluster-docs/docs/tags/operators"},{label:"Kubernetes Operators",permalink:"/cluster-docs/docs/tags/kubernetes-operators"},{label:"Redis",permalink:"/cluster-docs/docs/tags/redis"},{label:"Postgres",permalink:"/cluster-docs/docs/tags/postgres"},{label:"Keycloak",permalink:"/cluster-docs/docs/tags/keycloak"}],version:"current",sidebarPosition:3,frontMatter:{id:"operators",title:"Operators",sidebar_label:"Operators",sidebar_position:3,tags:["Operators","Kubernetes Operators","Redis","Postgres","Redis","Keycloak"]},sidebar:"clusterDocs",previous:{title:"Unmanaged cluster setup",permalink:"/cluster-docs/docs/managed-cluster/unmanaged-cluster-setup"},next:{title:"Databases",permalink:"/cluster-docs/docs/category/databases"}},p={},c=[{value:"PGO Operator (Crunchy Data) 5.2.0",id:"pgo-operator-crunchy-data-520",level:2},{value:"Keycloak Operator V20",id:"keycloak-operator-v20",level:2},{value:"Redis",id:"redis",level:2},{value:"Closing",id:"closing",level:2}],i={toc:c};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"operators"},"Operators"),(0,o.kt)("p",null,"For organizational purposes we want to have our operators running in a single namespace and managing apps in other namespaces. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="create operator namespace"',title:'"create',operator:!0,'namespace"':!0},"kubectl create namespace operators\n")),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Please note that all version described here are subject to changes. Please verify if the version described here coincides with the desired version.")),(0,o.kt)("h2",{id:"pgo-operator-crunchy-data-520"},"PGO Operator (Crunchy Data) 5.2.0"),(0,o.kt)("p",null,"The Crunchy data operator or ",(0,o.kt)("a",{parentName:"p",href:"https://access.crunchydata.com/documentation/postgres-operator/v5/"},"PGO")," is a postgres operator that allows us to easily create and manage postgres instances. "),(0,o.kt)("p",null,"PGO has already been forked for you and all we need to do is download the repository and run the predefined coding. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="download repo"',title:'"download','repo"':!0},"git clone https://github.com/nimbit-software/crunch-data-pgo.git\n\ncd crunch-data-pgo\n")),(0,o.kt)("p",null,"Once in the repository we can execute the kustomize command to set up the operator."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="set up operator"',title:'"set',up:!0,'operator"':!0},"# only needed if the namespace was not yet created\nkubectl apply -k kustomize/install/namespace  \nkubectl apply --server-side -k kustomize/install/default\n")),(0,o.kt)("p",null,"This will create a namespace called operators (if not exists) and create all of the objects required to deploy PGO."),(0,o.kt)("p",null,"To check on the status of your installation, you can run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl -n operators get pods \\\n  --selector=postgres-operator.crunchydata.com/control-plane=postgres-operator \\\n  --field-selector=status.phase=Running\n")),(0,o.kt)("p",null,"If the PGO Pod is healthy, you should see output similar to:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                                READY   STATUS    RESTARTS   AGE\npostgres-operator-9dd545d64-t4h8d   1/1     Running   0          3s\n")),(0,o.kt)("p",null,"Before creating a postgres cluster we will first create the other operators. All the PGO docs can be found ",(0,o.kt)("a",{parentName:"p",href:"https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/"},"here")),(0,o.kt)("h2",{id:"keycloak-operator-v20"},"Keycloak Operator V20"),(0,o.kt)("p",null,"The keycloak operators allows us to manage keycloak instances. It will spin up and monitor all the resources need for the keycloak environment. "),(0,o.kt)("p",null,"To install the operator on a Kubernetes cluster, you first need to install its CRDs by running the following commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Keycloak CRD"',title:'"Keycloak','CRD"':!0},"kubectl apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/20.0.0/kubernetes/keycloaks.k8s.keycloak.org-v1.yml\n\nkubectl apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/20.0.0/kubernetes/keycloakrealmimports.k8s.keycloak.org-v1.yml\n")),(0,o.kt)("p",null,"Now that we have the CRDs defined lets start setup the operator:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/20.0.0/kubernetes/kubernetes.yml -n operators\n")),(0,o.kt)("p",null,"Now let verify its running: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl -n operators get pods   --selector=app.kubernetes.io/name=keycloak-operator   --field-selector=status.phase=Ru\nnning\n")),(0,o.kt)("p",null,"You should see something like: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                                READY   STATUS    RESTARTS   AGE\nkeycloak-operator-fdc587f46-k5tlj   1/1     Running   0          105s\nnning\n")),(0,o.kt)("p",null,"Great we got that one going now lets move on to the next one"),(0,o.kt)("h2",{id:"redis"},"Redis"),(0,o.kt)("p",null,"Redis our wonderful cache engine. Where would we be without it. I don't want to know. Lets get the operator running. "),(0,o.kt)("p",null,"Thankfully we can you helm for that: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=Redis",title:"Redis"},"helm repo add ot-helm https://ot-container-kit.github.io/helm-charts/\n\nhelm upgrade redis-operator ot-helm/redis-operator \\\n    --install --namespace operators\n\n")),(0,o.kt)("p",null,"And now for our check: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl -n operators get pods  -l name=redis-operator   --field-selector=status.phase=Running\n")),(0,o.kt)("p",null,"And we should expect to see something like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                              READY   STATUS    RESTARTS   AGE\nredis-operator-7899446668-vjddp   1/1     Running   0          5m5s\n")),(0,o.kt)("h2",{id:"closing"},"Closing"),(0,o.kt)("p",null,"We are all set up. If you get stuck please refer to the official docs provided by the different operator providers"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://access.crunchydata.com/documentation/postgres-operator/v5/"},"Postgres Operator")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.keycloak.org/guides#operator"},"Keycloak")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://ot-container-kit.github.io/redis-operator/"},"Redis"))))}u.isMDXComponent=!0}}]);