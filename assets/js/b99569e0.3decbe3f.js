"use strict";(self.webpackChunkcluster_docs=self.webpackChunkcluster_docs||[]).push([[4517],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,g=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(g,s(s({ref:t},u),{},{components:n})):r.createElement(g,s({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8565:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={id:"providers-aws",title:"AWS",sidebar_label:"AWS",sidebar_position:1,tags:["AWS"]},s="AWS",i={unversionedId:"providers/providers-aws",id:"providers/providers-aws",title:"AWS",description:"Cluster access",source:"@site/docs/providers/aws.md",sourceDirName:"providers",slug:"/providers/providers-aws",permalink:"/cluster-docs/docs/providers/providers-aws",draft:!1,editUrl:"https://github.com/nimbit-software/cluster-docs/blob/master/docs/providers/aws.md",tags:[{label:"AWS",permalink:"/cluster-docs/docs/tags/aws"}],version:"current",sidebarPosition:1,frontMatter:{id:"providers-aws",title:"AWS",sidebar_label:"AWS",sidebar_position:1,tags:["AWS"]},sidebar:"clusterDocs",previous:{title:"Providers",permalink:"/cluster-docs/docs/category/providers"},next:{title:"Management Cluster",permalink:"/cluster-docs/docs/category/management-cluster"}},l={},c=[{value:"Cluster access",id:"cluster-access",level:2},{value:"Install aws cli",id:"install-aws-cli",level:3},{value:"Creating a cluster",id:"creating-a-cluster",level:2},{value:"Routing",id:"routing",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"aws"},"AWS"),(0,a.kt)("h2",{id:"cluster-access"},"Cluster access"),(0,a.kt)("h3",{id:"install-aws-cli"},"Install aws cli"),(0,a.kt)("p",null,"In order to be able to import he cluster config we need to install the cli"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title='aws cli'",title:"'aws","cli'":!0},"msiexec.exe /i https://awscli.amazonaws.com/AWSCLIV2.msi\n")),(0,a.kt)("p",null,"Then we can login to the aws cli "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# we need the following \n# AWS ACCESS KEY ID \n# AWS ACCESS KEY SECRET\n# REGION\n# OUTPUT FORMAT: You can choose json \n\n\n\naws configure\n\naws sts get-caller-identity\n")),(0,a.kt)("p",null,"Then we can import the different config details into our .kube/config file "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"aws eks --region <region> update-kubeconfig --name <cluster-name>\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"You can ",(0,a.kt)("strong",{parentName:"p"},"rename your contexts")," for better readabillity by using "),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# CHANGE CONTEXT NAME\nkubectl config rename-context old-name new-name \n"))),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If you installed ",(0,a.kt)("strong",{parentName:"p"},"kubectx")," you can now view the your context using "),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# LIST CLUSTERS\nkubectx \n"))),(0,a.kt)("h2",{id:"creating-a-cluster"},"Creating a cluster"),(0,a.kt)("p",null,"The most efficient way to create a cluster is to use the eksctl tool "),(0,a.kt)("p",null,"And we can use choco to install it "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="install eksctl"',title:'"install','eksctl"':!0},"choco install -y eksctl \n")),(0,a.kt)("p",null,"Now with that installed we can create our cluster.\nThis command will create a new cluster with all the needed node groups."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="create cluster"',title:'"create','cluster"':!0},"# This can be adapted as needed for more details see the help\n# eksctl --help \n\n\neksctl create cluster \\\n    --name admin \\ \n    --region eu-central-1 \\\n    --version 1.23 \\ \n    --nodegroup-name admin \\\n    --node-type t3.large \\\n    --nodes 3\n")),(0,a.kt)("h2",{id:"routing"},"Routing"),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"Unlike other clusters AWS create a public DNS name and not an IP this requires us to handle routing into the cluster slightly different. "),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("strong",{parentName:"p"},"Steps")),(0,a.kt)("ol",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"DNS setting"),": In you dns provider we need to create a cname entry to forward the request coming in to a specific dns name to the AWS dns "),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Route 53"),": In Aws Navigate to the Route 53 service and under hosted zones we need to add our domain as a hosted zone. It is enough to define the root dns name  "))))}p.isMDXComponent=!0}}]);